C = c(10, NA, NA, NA)
for (i in 2:4){
C[i] = C[i-1] * (F + a * C[i-1]) * dt
}
plot(seq(1,4), C)
F = -1
a = 0.1
dt = 1
C = c(10, NA, NA, NA)
for (i in 2:4){
C[i] = C[i-1] * (F + a * C[i-1]) * dt
}
plot(seq(1,4), C)
F = -0.3
a = 0.1
dt = 1
C = c(10, NA, NA, NA)
for (i in 2:4){
C[i] = C[i-1] * (F + a * C[i-1]) * dt
}
plot(seq(1,4), C)
plot(seq(1,4), C, type = 'l')
F = -0.3
a = 0.1
dt = 1
C = c(10, NA, NA, NA)
for (i in 2:4){
C[i] = C[i-1] * (F + a * C[i-1]) * dt
}
plot(seq(1,4), C, type = 'l')
C_analytical = c(NA, NA, NA, NA)
for (i in 1:4){
C_analytical[i] = (C[1] + F/a) * exp(a * i) - F/a
}
F = -0.3
a = 0.1
dt = 1
C = c(10, NA, NA, NA)
for (i in 2:4){
C[i] = C[i-1] * (F + a * C[i-1]) * dt
}
plot(seq(1,4), C, type = 'l')
C_analytical = c(NA, NA, NA, NA)
for (i in 1:4){
C_analytical[i] = (C[1] + F/a) * exp(a * i) - F/a
}
lines(seq(1,4), C_analytical, col = 'red')
C_analytical
F = -0.3
a = 0.1
dt = 1
C = c(10, NA, NA, NA)
for (i in 2:4){
C[i] = C[i-1] * (F + a * C[i-1]) * dt
}
plot(seq(1,4), C, type = 'l')
C_analytical = c(NA, NA, NA, NA)
for (i in 1:4){
C_analytical[i] = (C[1] - F/a) * exp(a * i) + F/a
}
lines(seq(1,4), C_analytical, col = 'red')
C_analytical
F/a
C_analytical
i=1
(C[1] + F/a) * exp(a * i) - F/a
F = -0.3
a = 0.1
dt = 1
C = c(10, NA, NA, NA)
for (i in 2:4){
C[i] = C[i-1] * (F + a * C[i-1]) * dt
}
plot(seq(1,4), C, type = 'l')
C_analytical = c(10, NA, NA, NA)
for (i in 2:4){
C_analytical[i] = (C_analytical[1] + F/a) * exp(a * i) - F/a
}
lines(seq(1,4), C_analytical, col = 'red')
C_analytical
F = -0.3
a = 0.1
dt = 1
C = c(10, NA, NA, NA)
for (i in 2:4){
C[i] = C[i-1] * (F + a * C[i-1]) * dt
}
plot(seq(1,4), C, type = 'l')
C_analytical = c(10, NA, NA, NA)
for (i in 2:4){
C_analytical[i] = (C_analytical[1] - F/a) * exp(a * i) + F/a
}
lines(seq(1,4), C_analytical, col = 'red')
F = -0.3
a = 0.1
dt = 1
C = c(10, NA, NA, NA)
for (i in 2:4){
C[i] = C[i-1] * (F + a * C[i-1]) * dt
}
plot(seq(1,4), C, type = 'l')
C_analytical = c(10, NA, NA, NA)
for (i in 2:4){
C_analytical[i] = (C_analytical[1] + F/a) * exp(a * i) - F/a
}
lines(seq(1,4), C_analytical, col = 'red')
F = 0.3
a = 0.1
dt = 1
C = c(10, NA, NA, NA)
for (i in 2:4){
C[i] = C[i-1] * (F + a * C[i-1]) * dt
}
plot(seq(1,4), C, type = 'l')
C_analytical = c(10, NA, NA, NA)
for (i in 2:4){
C_analytical[i] = (C_analytical[1] + F/a) * exp(a * i) - F/a
}
lines(seq(1,4), C_analytical, col = 'red')
C_analytical
C
F = 0.3
a = 0.1
dt = 0.1
C = c(10, NA, NA, NA)
for (i in 2:4){
C[i] = C[i-1] * (F + a * C[i-1]) * dt
}
plot(seq(1,4), C, type = 'l')
C_analytical = c(10, NA, NA, NA)
for (i in 2:4){
C_analytical[i] = (C_analytical[1] + F/a) * exp(a * i) - F/a
}
lines(seq(1,4), C_analytical, col = 'red')
F = -0.3
a = 0.1
dt = 1
C = c(10, NA, NA, NA)
for (i in 2:4){
C[i] = C[i-1] * (F + a * C[i-1]) * dt
}
plot(seq(1,4), C, type = 'l')
C_analytical = c(10, NA, NA, NA)
for (i in 1:4){
C_analytical[i] = (C_analytical[1] + F/a) * exp(a * i) - F/a
}
lines(seq(1,4), C_analytical, col = 'red')
F = -0.3
a = 0.1
dt = 1
C = c(10, NA, NA, NA)
for (i in 2:4){
C[i] = C[i-1] * (F + a * C[i-1]) * dt
}
plot(seq(1,4), C, type = 'l')
C_analytical = c(10, NA, NA, NA)
for (i in 2:4){
C_analytical[i] = (C_analytical[1] + F/a) * exp(a * i) - F/a
}
lines(seq(1,4), C_analytical, col = 'red')
C_analytical
F = -0.3
a = 0.1
dt = 1
C = c(10, NA, NA, NA)
for (i in 2:4){
C[i] = C[i-1] * (F + a * C[i-1]) * dt
}
plot(seq(1,4), C, type = 'l')
C_analytical = c(10, NA, NA, NA)
for (i in 2:4){
C_analytical[i] = (C_analytical[1] - F/a) * exp(a * i) - F/a
}
lines(seq(1,4), C_analytical, col = 'red')
(C_analytical[1] + F/a)
exp(a * i)
F/a
F = -0.3
a = 0.1
dt = 1
C = c(10, NA, NA, NA)
for (i in 2:4){
C[i] = C[i-1] * (F + a * C[i-1]) * dt
}
plot(seq(1,4), C, type = 'l')
C_analytical = c(10, NA, NA, NA)
for (i in 2:4){
C_analytical[i] = (C_analytical[1] + F/a) * exp(a * i) + F/a
}
lines(seq(1,4), C_analytical, col = 'red')
F = -0.3
a = 0.1
dt = 1
C = c(10, NA, NA, NA)
for (i in 2:4){
C[i] = C[i-1] * (F + a * C[i-1]) * dt
}
plot(seq(1,4), C, type = 'l')
C_analytical = c(10, NA, NA, NA)
for (i in 2:4){
C_analytical[i] = (C_analytical[1] - F/a) * exp(a * i) + F/a
}
lines(seq(1,4), C_analytical, col = 'red')
+ F/a
- F/a
F = 0.3
a = 0.1
dt = 1
C = c(10, NA, NA, NA)
for (i in 2:4){
C[i] = C[i-1] * (F + a * C[i-1]) * dt
}
plot(seq(1,4), C, type = 'l')
C_analytical = c(10, NA, NA, NA)
for (i in 2:4){
C_analytical[i] = (C_analytical[1] + F/a) * exp(a * i) - F/a
}
lines(seq(1,4), C_analytical, col = 'red')
i=3
C[i-1] * (F + a * C[i-1]) * dt
F = 0.3
a = 0.1
dt = 1
C = c(10, NA, NA, NA)
for (i in 2:4){
C[i] = C[i-1] + (F + a * C[i-1]) * dt
}
plot(seq(1,4), C, type = 'l')
C_analytical = c(10, NA, NA, NA)
for (i in 2:4){
C_analytical[i] = (C_analytical[1] + F/a) * exp(a * i) - F/a
}
lines(seq(1,4), C_analytical, col = 'red')
F = -0.3
a = 0.1
dt = 1
C = c(10, NA, NA, NA)
for (i in 2:4){
C[i] = C[i-1] + (F + a * C[i-1]) * dt
}
plot(seq(1,4), C, type = 'l')
C_analytical = c(10, NA, NA, NA)
for (i in 2:4){
C_analytical[i] = (C_analytical[1] + F/a) * exp(a * i) - F/a
}
lines(seq(1,4), C_analytical, col = 'red')
(F + a * C[i-1]) * dt
F = -0.5
a = 0.1
dt = 1
C = c(10, NA, NA, NA)
for (i in 2:4){
C[i] = C[i-1] + (F + a * C[i-1]) * dt
}
plot(seq(1,4), C, type = 'l')
C_analytical = c(10, NA, NA, NA)
for (i in 2:4){
C_analytical[i] = (C_analytical[1] + F/a) * exp(a * i) - F/a
}
lines(seq(1,4), C_analytical, col = 'red')
F = -1.0
a = 0.1
dt = 1
C = c(10, NA, NA, NA)
for (i in 2:4){
C[i] = C[i-1] + (F + a * C[i-1]) * dt
}
plot(seq(1,4), C, type = 'l')
C_analytical = c(10, NA, NA, NA)
for (i in 2:4){
C_analytical[i] = (C_analytical[1] + F/a) * exp(a * i) - F/a
}
lines(seq(1,4), C_analytical, col = 'red')
F = -1.2
a = 0.1
dt = 1
C = c(10, NA, NA, NA)
for (i in 2:4){
C[i] = C[i-1] + (F + a * C[i-1]) * dt
}
plot(seq(1,4), C, type = 'l')
C_analytical = c(10, NA, NA, NA)
for (i in 2:4){
C_analytical[i] = (C_analytical[1] + F/a) * exp(a * i) - F/a
}
lines(seq(1,4), C_analytical, col = 'red')
F = -1.5
a = 0.1
dt = 1
C = c(10, NA, NA, NA)
for (i in 2:4){
C[i] = C[i-1] + (F + a * C[i-1]) * dt
}
plot(seq(1,4), C, type = 'l')
C_analytical = c(10, NA, NA, NA)
for (i in 2:4){
C_analytical[i] = (C_analytical[1] + F/a) * exp(a * i) - F/a
}
lines(seq(1,4), C_analytical, col = 'red')
F = -1.5
a = 0.1
dt = 1
C = c(10, NA, NA, NA)
for (i in 2:4){
C[i] = C[i-1] + (F + a * C[i-1]) * dt
}
plot(seq(1,4), C, type = 'l', ylim = c(0,10))
C_analytical = c(10, NA, NA, NA)
for (i in 2:4){
C_analytical[i] = (C_analytical[1] + F/a) * exp(a * i) - F/a
}
lines(seq(1,4), C_analytical, col = 'red')
F = -1.5
a = 0.1
dt = 1
C = c(10, NA, NA, NA)
for (i in 2:4){
C[i] = C[i-1] + (F + a * C[i-1]) * dt
}
plot(seq(1,4), C, type = 'l', ylim = c(6,10))
C_analytical = c(10, NA, NA, NA)
for (i in 2:4){
C_analytical[i] = (C_analytical[1] + F/a) * exp(a * i) - F/a
}
lines(seq(1,4), C_analytical, col = 'red')
F = 1.5
a = -0.1
dt = 1
C = c(10, NA, NA, NA)
for (i in 2:4){
C[i] = C[i-1] + (F + a * C[i-1]) * dt
}
plot(seq(1,4), C, type = 'l', ylim = c(6,10))
C_analytical = c(10, NA, NA, NA)
for (i in 2:4){
C_analytical[i] = (C_analytical[1] + F/a) * exp(a * i) - F/a
}
lines(seq(1,4), C_analytical, col = 'red')
F = 0.3
a = -0.1
dt = 1
C = c(10, NA, NA, NA)
for (i in 2:4){
C[i] = C[i-1] + (F + a * C[i-1]) * dt
}
plot(seq(1,4), C, type = 'l', ylim = c(6,10))
C_analytical = c(10, NA, NA, NA)
for (i in 2:4){
C_analytical[i] = (C_analytical[1] + F/a) * exp(a * i) - F/a
}
lines(seq(1,4), C_analytical, col = 'red')
F = 0.3
a = -0.3
dt = 1
C = c(10, NA, NA, NA)
for (i in 2:4){
C[i] = C[i-1] + (F + a * C[i-1]) * dt
}
plot(seq(1,4), C, type = 'l', ylim = c(6,10))
C_analytical = c(10, NA, NA, NA)
for (i in 2:4){
C_analytical[i] = (C_analytical[1] + F/a) * exp(a * i) - F/a
}
lines(seq(1,4), C_analytical, col = 'red')
F = 0.3
a = -0.3
dt = 1
C = c(10, NA, NA, NA)
for (i in 2:4){
C[i] = C[i-1] + (F + a * C[i-1]) * dt
}
plot(seq(1,4), C, type = 'l', ylim = c(0,10))
C_analytical = c(10, NA, NA, NA)
for (i in 2:4){
C_analytical[i] = (C_analytical[1] + F/a) * exp(a * i) - F/a
}
lines(seq(1,4), C_analytical, col = 'red')
F = 0.3
a = -0.4
dt = 1
C = c(10, NA, NA, NA)
for (i in 2:4){
C[i] = C[i-1] + (F + a * C[i-1]) * dt
}
plot(seq(1,4), C, type = 'l', ylim = c(0,10))
C_analytical = c(10, NA, NA, NA)
for (i in 2:4){
C_analytical[i] = (C_analytical[1] + F/a) * exp(a * i) - F/a
}
lines(seq(1,4), C_analytical, col = 'red')
F = 0.3
a = -0.5
dt = 1
C = c(10, NA, NA, NA)
for (i in 2:4){
C[i] = C[i-1] + (F + a * C[i-1]) * dt
}
plot(seq(1,4), C, type = 'l', ylim = c(0,10))
C_analytical = c(10, NA, NA, NA)
for (i in 2:4){
C_analytical[i] = (C_analytical[1] + F/a) * exp(a * i) - F/a
}
lines(seq(1,4), C_analytical, col = 'red')
F = 0.3
a = -0.7
dt = 1
C = c(10, NA, NA, NA)
for (i in 2:4){
C[i] = C[i-1] + (F + a * C[i-1]) * dt
}
plot(seq(1,4), C, type = 'l', ylim = c(0,10))
C_analytical = c(10, NA, NA, NA)
for (i in 2:4){
C_analytical[i] = (C_analytical[1] + F/a) * exp(a * i) - F/a
}
lines(seq(1,4), C_analytical, col = 'red')
C
t=seq(0, 365, 1)
plot(sin(t))
t=seq(0, 365, 1)
y = sin(t)
plot(t,y,type="l", xlab="time", ylab="Sine wave")
y = sin(t+180)
plot(t,y,type="l", xlab="time", ylab="Sine wave")
y = sin(t-180)
plot(t,y,type="l", xlab="time", ylab="Sine wave")
t=seq(0, 365, 1)
y = sin(t/180)
plot(t,y,type="l", xlab="time", ylab="Sine wave")
y = sin(t/360)
plot(t,y,type="l", xlab="time", ylab="Sine wave")
y = sin(t/90)
plot(t,y,type="l", xlab="time", ylab="Sine wave")
y = sin(t/100)
plot(t,y,type="l", xlab="time", ylab="Sine wave")
y = sin(t/10)
plot(t,y,type="l", xlab="time", ylab="Sine wave")
y = sin(t/120)
plot(t,y,type="l", xlab="time", ylab="Sine wave")
plot(t, temp,type="l", xlab="time", ylab="temp)
temp = sin(t/120)
plot(t, temp,type="l", xlab="time", ylab="temp")
windspeed = sin(t/50)
plot(t, windspeed,type="l", xlab="time", ylab="u10")
windspeed = sin(t/60)
plot(t, windspeed,type="l", xlab="time", ylab="u10")
windspeed = sin(t/40)
plot(t, windspeed,type="l", xlab="time", ylab="u10")
plot(t, temp,type="l", xlab="time", ylab="temp")
as.Date('07-30-2023') +days(7*12)
as.Date('2023-07-30') +days(7*12)
as.Date('2023-07-30') +zoo::days(7*12)
as.Date('2023-07-30') +lubridate::days(7*12)
480/24
480/8
60/5
as.Date('2023-06-30') +lubridate::days(7*12)
# Load LakeEnsemblR
library(LakeEnsemblR)
#initial clean up
rm(list = ls())
graphics.off()
cat("\f")
# set working directory
setwd(dirname(rstudioapi::getSourceEditorContext()$path))
# load library
library(LakeEnsemblR)
# Set config file
config_file <- "LakeEnsemblR.yaml"
model <- c("FLake", "GLM", "GOTM", "Simstrat", "MyLake")
# 1. Example - creates directories with all model setup
export_config(config_file = config_file, model = c("FLake", "GLM", "GOTM", "Simstrat", "MyLake"),
folder = ".")
# 2. Run ensemble lake models
run_ensemble(config_file = config_file,
model = c("FLake", "GLM", "GOTM", "Simstrat", "MyLake"),
return_list = FALSE, parallel = FALSE)
# path of the output netcdf file
ncdf <- "output/ensemble_output.nc"
# plot heatmap
plot_heatmap(ncdf)
# Load libraries for post-processing
library(gotmtools)
library(ggplot2)
## Plot model output using gotmtools/ggplot2
# Extract names of all the variables in netCDF
ncdf <- "output/ensemble_output.nc"
vars <- gotmtools::list_vars(ncdf)
vars # Print variables
p1 <- plot_heatmap(ncdf)
p1
# Change the theme and increase text size for saving
p1 <- p1 +
theme_classic(base_size = 24) +
scale_colour_gradientn(limits = c(0, 21),
colours = rev(RColorBrewer::brewer.pal(11, "Spectral")))
# Save as a png file
ggsave("output/ensemble_heatmap.png", p1,  dpi = 300,width = 384,height = 280, units = "mm")
calc_fit(ncdf = "output/ensemble_output.nc",
model = c("FLake", "GLM",  "GOTM", "Simstrat", "MyLake"),
var = "watertemp")
calc_fit(ncdf = "output/ensemble_output.nc",
model = c("FLake", "GLM",  "GOTM", "Simstrat", "MyLake"),
var = "temp")
plist <- plot_resid(ncdf = ens_out,var = "temp",
model = c('FLake', 'GLM',  'GOTM', 'Simstrat', 'MyLake'))
plist <- plot_resid(ncdf = "output/ensemble_output.nc",var = "temp",
model = c('FLake', 'GLM',  'GOTM', 'Simstrat', 'MyLake'))
plist
### calibration
cali_res <- cali_ensemble(config_file = config_file, num = 10000, cmethod = "MCMC",
parallel = TRUE, model = model)
